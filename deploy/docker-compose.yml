name: "attack-defense-bot"

services:
  bot:
    build:
      context: ..
      dockerfile: ./deploy/bot.dockerfile
    command: [ "python3", "app.py" ]
    env_file:
      - ./config/.env
    environment:
      - DB_HOST=mysql
      - REDIS_HOST=redis
      - MINIO_HOST=minio

  admin:
    build:
      context: ..
      dockerfile: ./deploy/admin.dockerfile
    command: [ "gunicorn", "-c", "gunicorn.conf.py", "admin.wsgi:application" ]
    env_file:
      - ./config/.env
    environment:
      - DB_HOST=mysql
      - MINIO_HOST=minio
    volumes:
      - ./init/gunicorn.conf.py:/src/gunicorn.conf.py
      - ./data/admin/static/:/src/static/
    depends_on:
      mysql:
        condition: service_healthy

  nginx:
    image: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./data/admin/static/:/var/www/static/
    ports:
      - "8000:8000"
    depends_on:
      - admin

  mysql:
    image: mysql
    env_file:
      - ./config/.env
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 3s
      retries: 100
    volumes:
      - ./data/mysql:/var/lib/mysql

  redis:
    image: redis
    env_file:
      - ./config/.env
    command: [ "redis-server", "--requirepass", "$REDIS_PASSWORD" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 3s
      retries: 100
    volumes:
      - ./data/redis:/data

  minio:
    image: minio/minio
    hostname: s3.ctf
    command: server /data --console-address ":9001"
    env_file:
      - ./config/.env
    ports:
      - "9001:9001"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  createbuckets:
    image: minio/mc
    env_file:
      - ./config/.env
    entrypoint: /etc/createbucket.sh
    volumes:
      - ./init/createbucket.sh:/etc/createbucket.sh
    environment:
      - MINIO_HOST=minio
    depends_on:
      minio:
        condition: service_healthy
